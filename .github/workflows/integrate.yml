name: 'CI: Pull Request'

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  install_deps:
    name: Install Dependencies and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3.1.1
        with:
          node-version: '16'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.11

      - name: Print node version
        id: node-version
        run: |
          node_ver=$( node --version )
          echo "Node: ${node_ver:1}"
          echo "::set-output name=node_version::${node_ver:1}"

      - name: Print pnpm version
        id: pnpm-version
        run: |
          pnpm_ver=$( pnpm --version )
          echo "Node: ${pnpm_ver:1}"
          echo "::set-output name=pnpm_version::${pnpm_ver:1}"

      - name: Restore "node_modules" from cache
        id: cache
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: node_modules
          restore-keys: ${{ runner.os }}-node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.node_version }}-${{ steps.pnpm-version.outputs.pnpm_version}}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Save "node_modules" to cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: node_modules
          key: ${{ steps.cache.outputs.primary-key }}

  jobs:
    name: Jobs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        job: ['test', 'build']
        test: [{ testing: '', testing2: '' }]
    needs: install_deps
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3.1.1
        with:
          node-version: '16'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.11

      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: main

      - name: Print node version
        id: node-version
        run: |
          node_ver=$( node --version )
          echo "Node: ${node_ver:1}"
          echo "::set-output name=node_version::${node_ver:1}"

      - name: Print pnpm version
        id: pnpm-version
        run: |
          pnpm_ver=$( pnpm --version )
          echo "Pnpm: ${pnpm_ver:1}"
          echo "::set-output name=pnpm_version::${pnpm_ver:1}"

      - name: Restore "node_modules" from cache
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: node_modules
          restore-keys: ${{ runner.os }}-node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.node_version }}-${{ steps.pnpm-version.outputs.pnpm_version}}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: npx nx affected --target=${{ matrix.job }} --parallel=1 --base=$NX_BASE --head=$NX_HEAD
      - run: echo '${{ matrix.test }}'
