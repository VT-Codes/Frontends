{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/utils/index.ts","../src/transitions/Transition/Transition.js","../src/transitions/useForkRef.ts","../src/transitions/getTransitionProps.ts","../src/transitions/utils.ts","../src/transitions/createTransition.ts","../src/transitions/document-window.ts","../src/transitions/Slide/Slide.tsx","../src/utils/defaultIconVariants.tsx","../src/SnackbarProvider/merger.ts","../src/transitions/getAutoHeightDuration.ts","../src/utils/styles.ts","../src/transitions/Collapse/Collapse.tsx","../src/SnackbarItem/utils.ts","../src/utils/createChainedFunction.js","../src/utils/useEventCallback.js","../src/ClickAway/ClickAway.tsx","../src/SnackbarItem/Snackbar.tsx","../src/SnackbarContent/SnackbarContent.tsx","../src/ui/MaterialDesignContent/MaterialDesignContent.tsx","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarContainer/SnackbarContainer.tsx","../src/SnackbarProvider/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from './types';\n\nexport default React.createContext<ProviderContext>();\n","import { InternalSnack } from '../types';\n\nexport const breakpoints = {\n    downXs: '@media (max-width:599.95px)',\n    upSm: '@media (min-width:600px)',\n};\n\nconst capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: InternalSnack['anchorOrigin']): string => (\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`\n);\n\nexport const isDefined = (value: string | null | undefined | number): boolean => (!!value || value === 0);\n","/**\n * BSD 3-Clause License\n *\n * Copyright (c) 2018, React Community\n * Forked from React (https://github.com/facebook/react) Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport React from 'react';\n\nexport const UNMOUNTED = 'unmounted';\nexport const EXITED = 'exited';\nexport const ENTERING = 'entering';\nexport const ENTERED = 'entered';\nexport const EXITING = 'exiting';\n\nclass Transition extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { appear } = props;\n\n        let initialStatus;\n\n        this.appearStatus = null;\n\n        if (props.in) {\n            if (appear) {\n                initialStatus = EXITED;\n                this.appearStatus = ENTERING;\n            } else {\n                initialStatus = ENTERED;\n            }\n        } else if (props.unmountOnExit || props.mountOnEnter) {\n            initialStatus = UNMOUNTED;\n        } else {\n            initialStatus = EXITED;\n        }\n\n        this.state = { status: initialStatus };\n\n        this.nextCallback = null;\n    }\n\n    static getDerivedStateFromProps({ in: nextIn }, prevState) {\n        if (nextIn && prevState.status === UNMOUNTED) {\n            return { status: EXITED };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        this.updateStatus(true, this.appearStatus);\n    }\n\n    componentDidUpdate(prevProps) {\n        let nextStatus = null;\n        if (prevProps !== this.props) {\n            const { status } = this.state;\n\n            if (this.props.in) {\n                if (status !== ENTERING && status !== ENTERED) {\n                    nextStatus = ENTERING;\n                }\n            } else if (status === ENTERING || status === ENTERED) {\n                nextStatus = EXITING;\n            }\n        }\n        this.updateStatus(false, nextStatus);\n    }\n\n    componentWillUnmount() {\n        this.cancelNextCallback();\n    }\n\n    getTimeouts() {\n        const { timeout } = this.props;\n        let enter = timeout;\n        let exit = timeout;\n\n        if (timeout != null && typeof timeout !== 'number') {\n            exit = timeout.exit;\n            enter = timeout.enter;\n        }\n        return { exit, enter };\n    }\n\n    updateStatus(mounting = false, nextStatus) {\n        if (nextStatus !== null) {\n            this.cancelNextCallback();\n\n            if (nextStatus === ENTERING) {\n                this.performEnter(mounting);\n            } else {\n                this.performExit();\n            }\n        } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n            this.setState({ status: UNMOUNTED });\n        }\n    }\n\n    get node() {\n        const node = this.props.nodeRef.current;\n        if (!node) {\n            throw new Error('notistack - Custom snackbar is not refForwarding');\n        }\n        return node;\n    }\n\n    performEnter(mounting) {\n        const { enter, id } = this.props;\n        const isAppearing = mounting;\n\n        const timeouts = this.getTimeouts();\n\n        if (!mounting && !enter) {\n            this.safeSetState({ status: ENTERED }, () => {\n                this.props.onEntered(this.node, isAppearing, id);\n            });\n            return;\n        }\n\n        this.props.onEnter(this.node, isAppearing, id);\n\n        this.safeSetState({ status: ENTERING }, () => {\n            this.props.onEntering(this.node, isAppearing, id);\n\n            this.onTransitionEnd(timeouts.enter, () => {\n                this.safeSetState({ status: ENTERED }, () => {\n                    this.props.onEntered(this.node, isAppearing, id);\n                });\n            });\n        });\n    }\n\n    performExit() {\n        const { exit, id } = this.props;\n        const timeouts = this.getTimeouts();\n\n        // no exit animation skip right to EXITED\n        if (!exit) {\n            this.safeSetState({ status: EXITED }, () => {\n                this.props.onExited(this.node, id);\n            });\n            return;\n        }\n\n        this.props.onExit(this.node, id);\n\n        this.safeSetState({ status: EXITING }, () => {\n            this.props.onExiting(this.node, id);\n\n            this.onTransitionEnd(timeouts.exit, () => {\n                this.safeSetState({ status: EXITED }, () => {\n                    this.props.onExited(this.node, id);\n                });\n            });\n        });\n    }\n\n    cancelNextCallback() {\n        if (this.nextCallback !== null) {\n            this.nextCallback.cancel();\n            this.nextCallback = null;\n        }\n    }\n\n    safeSetState(nextState, callback) {\n        callback = this.setNextCallback(callback);\n        this.setState(nextState, callback);\n    }\n\n    setNextCallback(callback) {\n        let active = true;\n\n        this.nextCallback = (event) => {\n            if (active) {\n                active = false;\n                this.nextCallback = null;\n\n                callback(event);\n            }\n        };\n\n        this.nextCallback.cancel = () => {\n            active = false;\n        };\n\n        return this.nextCallback;\n    }\n\n    onTransitionEnd(timeout, handler) {\n        this.setNextCallback(handler);\n        const doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n        if (!this.node || doesNotHaveTimeoutOrListener) {\n            setTimeout(this.nextCallback, 0);\n            return;\n        }\n\n        if (this.props.addEndListener) {\n            this.props.addEndListener(this.node, this.nextCallback);\n        }\n\n        if (timeout != null) {\n            setTimeout(this.nextCallback, timeout);\n        }\n    }\n\n    render() {\n        const { status } = this.state;\n\n        if (status === UNMOUNTED) {\n            return null;\n        }\n\n        const {\n            children,\n            // filter props for `Transition`\n            id: _id,\n            in: _in,\n            mountOnEnter: _mountOnEnter,\n            unmountOnExit: _unmountOnExit,\n            appear: _appear,\n            enter: _enter,\n            exit: _exit,\n            timeout: _timeout,\n            addEndListener: _addEndListener,\n            onEnter: _onEnter,\n            onEntering: _onEntering,\n            onEntered: _onEntered,\n            onExit: _onExit,\n            onExiting: _onExiting,\n            onExited: _onExited,\n            nodeRef: _nodeRef,\n            ...childProps\n        } = this.props;\n\n        return children(status, childProps);\n    }\n}\n\nfunction noop() { }\n\nTransition.defaultProps = {\n    in: false,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    enter: true,\n    exit: true,\n\n    onEnter: noop,\n    onEntering: noop,\n    onEntered: noop,\n\n    onExit: noop,\n    onExiting: noop,\n    onExited: noop,\n};\n\nexport default Transition;\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\n\n/**\n * passes {value} to {ref}\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef<T>(\n    ref: React.MutableRefObject<T | null> | ((instance: T | null) => void) | null | undefined,\n    value: T | null,\n): void {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\n\nexport default function useForkRef<Instance>(\n    refA: React.Ref<Instance> | null | undefined,\n    refB: React.Ref<Instance> | null | undefined,\n): React.Ref<Instance> | null {\n    /**\n     * This will create a new function if the ref props change and are defined.\n     * This means react will call the old forkRef with `null` and the new forkRef\n     * with the ref. Cleanup naturally emerges from this behavior.\n     */\n    return React.useMemo(() => {\n        if (refA == null && refB == null) {\n            return null;\n        }\n        return (refValue) => {\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        };\n    }, [refA, refB]);\n}\n","import { TransitionDuration } from '../types';\n\ninterface ComponentProps {\n    style: React.CSSProperties | undefined;\n    /**\n     * number: 400\n     * string: 'auto'\n     * TransitionDuration: { enter: 200, exit: 400 }\n     */\n    timeout: number | string | TransitionDuration;\n    mode: 'enter' | 'exit';\n}\n\ninterface TransitionPropsReturnType {\n    duration: string | number;\n    easing: string | undefined;\n    delay: string | undefined;\n}\n\nexport default function getTransitionProps(props: ComponentProps): TransitionPropsReturnType {\n    const { timeout, style = {}, mode } = props;\n    return {\n        duration: style.transitionDuration ?? (typeof timeout === 'object' ? (timeout[mode] || 0) : timeout),\n        easing: style.transitionTimingFunction,\n        delay: style.transitionDelay,\n    };\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nexport const defaultEasing = {\n    // This is the most common easing curve.\n    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    // Objects enter the screen at full velocity from off-screen and\n    // slowly decelerate to a resting point.\n    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n    // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n    // The sharp curve is used by objects that may return to the screen at any time.\n    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',\n};\n\n/**\n * CSS hack to force a repaint\n */\nexport const reflow = (node: Element): void => {\n    // We have to do something with node.scrollTop.\n    // Otherwise it removed from the compiled code by optimisers\n    // eslint-disable-next-line no-self-assign\n    node.scrollTop = node.scrollTop;\n};\n","import { defaultEasing } from './utils';\n\ninterface CreateTransitionOptions {\n    duration: string | number;\n    easing?: string;\n    delay?: string | number;\n}\n\nconst formatMs = (milliseconds: number) => `${Math.round(milliseconds)}ms`;\n\nexport default function createTransition(props: string | string[] = ['all'], options?: CreateTransitionOptions): string {\n    const {\n        duration = 300,\n        easing = defaultEasing.easeInOut,\n        delay = 0,\n    } = options || {};\n\n    const properties = Array.isArray(props) ? props : [props];\n\n    return properties\n        .map((animatedProp) => {\n            const formattedDuration = typeof duration === 'string' ? duration : formatMs(duration);\n            const formattedDelay = typeof delay === 'string' ? delay : formatMs(delay);\n            return `${animatedProp} ${formattedDuration} ${easing} ${formattedDelay}`;\n        })\n        .join(',');\n}\n","export function ownerDocument(node: Node | null | undefined): Document {\n    return (node && node.ownerDocument) || document;\n}\n\nexport function ownerWindow(node: Node | null): Window {\n    const doc = ownerDocument(node);\n    return doc.defaultView || window;\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport TransitionComponent, { TransitionStatus } from '../Transition';\nimport useForkRef from '../useForkRef';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { defaultEasing, reflow } from '../utils';\nimport { ownerWindow } from '../document-window';\nimport { SlideTransitionDirection, TransitionHandlerProps, TransitionProps } from '../../types';\n\n/**\n * Corresponds to 10 frames at 60 Hz.\n * A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\n */\nfunction debounce(func, wait = 166) {\n    let timeout;\n    function debounced(...args: any[]) {\n        const later = () => {\n            func.apply(this, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    }\n\n    debounced.clear = () => {\n        clearTimeout(timeout);\n    };\n\n    return debounced;\n}\n\n/**\n * Translate the node so it can't be seen on the screen.\n * Later, we're going to translate the node back to its original location with `none`.\n */\nfunction getTranslateValue(direction: SlideTransitionDirection, node: HTMLElement & { fakeTransform?: string }): string {\n    const rect = node.getBoundingClientRect();\n    const containerWindow = ownerWindow(node);\n    let transform;\n\n    if (node.fakeTransform) {\n        transform = node.fakeTransform;\n    } else {\n        const computedStyle = containerWindow.getComputedStyle(node);\n        transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n    }\n\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (transform && transform !== 'none' && typeof transform === 'string') {\n        const transformValues = transform.split('(')[1].split(')')[0].split(',');\n        offsetX = parseInt(transformValues[4], 10);\n        offsetY = parseInt(transformValues[5], 10);\n    }\n\n    switch (direction) {\n        case 'left':\n            return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n        case 'right':\n            return `translateX(-${rect.left + rect.width - offsetX}px)`;\n        case 'up':\n            return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n        default:\n            // down\n            return `translateY(-${rect.top + rect.height - offsetY}px)`;\n    }\n}\n\nfunction setTranslateValue(direction: SlideTransitionDirection, node: HTMLElement | null): void {\n    if (!node) return;\n    const transform = getTranslateValue(direction, node);\n    if (transform) {\n        node.style.webkitTransform = transform;\n        node.style.transform = transform;\n    }\n}\n\nconst Slide = React.forwardRef<unknown, TransitionProps>((props, ref) => {\n    const {\n        children,\n        direction = 'down',\n        in: inProp,\n        style,\n        timeout = 0,\n        onEnter,\n        onEntered,\n        onExit,\n        onExited,\n        ...other\n    } = props;\n\n    const nodeRef = React.useRef(null);\n    const handleRefIntermediary = useForkRef(children.ref, nodeRef);\n    const handleRef = useForkRef(handleRefIntermediary, ref);\n\n    const handleEnter: TransitionHandlerProps['onEnter'] = (node, isAppearing, snackId) => {\n        setTranslateValue(direction, node);\n        reflow(node);\n\n        if (onEnter) {\n            onEnter(node, isAppearing, snackId);\n        }\n    };\n\n    const handleEntering = (node: HTMLElement) => {\n        const easing = style?.transitionTimingFunction || defaultEasing.easeOut;\n        const transitionProps = getTransitionProps({\n            timeout,\n            mode: 'enter',\n            style: { ...style, transitionTimingFunction: easing },\n        });\n\n        node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n        node.style.transition = createTransition('transform', transitionProps);\n\n        node.style.webkitTransform = 'none';\n        node.style.transform = 'none';\n    };\n\n    const handleExit: TransitionHandlerProps['onExit'] = (node, snackId) => {\n        const easing = style?.transitionTimingFunction || defaultEasing.sharp;\n        const transitionProps = getTransitionProps({\n            timeout,\n            mode: 'exit',\n            style: { ...style, transitionTimingFunction: easing },\n        });\n\n        node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n        node.style.transition = createTransition('transform', transitionProps);\n\n        setTranslateValue(direction, node);\n\n        if (onExit) {\n            onExit(node, snackId);\n        }\n    };\n\n    const handleExited: TransitionHandlerProps['onExited'] = (node, snackId) => {\n        // No need for transitions when the component is hidden\n        node.style.webkitTransition = '';\n        node.style.transition = '';\n\n        if (onExited) {\n            onExited(node, snackId);\n        }\n    };\n\n    const updatePosition = React.useCallback(() => {\n        if (nodeRef.current) {\n            setTranslateValue(direction, nodeRef.current);\n        }\n    }, [direction]);\n\n    React.useEffect(() => {\n        // Skip configuration where the position is screen size invariant.\n        if (inProp || direction === 'down' || direction === 'right') {\n            return undefined;\n        }\n\n        const handleResize = debounce(() => {\n            if (nodeRef.current) {\n                setTranslateValue(direction, nodeRef.current);\n            }\n        });\n\n        const containerWindow = ownerWindow(nodeRef.current);\n        containerWindow.addEventListener('resize', handleResize);\n        return () => {\n            handleResize.clear();\n            containerWindow.removeEventListener('resize', handleResize);\n        };\n    }, [direction, inProp]);\n\n    React.useEffect(() => {\n        if (!inProp) {\n            // We need to update the position of the drawer when the direction change and\n            // when it's hidden.\n            updatePosition();\n        }\n    }, [inProp, updatePosition]);\n\n    return (\n        <TransitionComponent\n            appear\n            nodeRef={nodeRef}\n            onEnter={handleEnter}\n            onEntered={onEntered}\n            onEntering={handleEntering}\n            onExit={handleExit}\n            onExited={handleExited}\n            in={inProp}\n            timeout={timeout}\n            {...other}\n        >\n            {(state: TransitionStatus, childProps: Record<string, any>) => React.cloneElement(children, {\n                ref: handleRef,\n                style: {\n                    visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n                    ...style,\n                    ...children.props.style,\n                },\n                ...childProps,\n            })}\n        </TransitionComponent>\n    );\n});\n\nexport default Slide;\n","import React from 'react';\n\nconst SvgIcon: React.FC = (props) => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        focusable=\"false\"\n        style={{\n            fontSize: 20,\n            marginInlineEnd: 8,\n            userSelect: 'none',\n            width: '1em',\n            height: '1em',\n            display: 'inline-block',\n            fill: 'currentColor',\n            flexShrink: 0,\n        }}\n        {...props}\n    />\n);\n\nconst CheckIcon: React.FC = () => (\n    <SvgIcon>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: React.FC = () => (\n    <SvgIcon>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: React.FC = () => (\n    <SvgIcon>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: React.FC = () => (\n    <SvgIcon>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst defaultIconVariants: Record<string, React.ReactNode> = {\n    default: undefined,\n    success: <CheckIcon />,\n    warning: <WarningIcon />,\n    error: <ErrorIcon />,\n    info: <InfoIcon />,\n};\n\nexport default defaultIconVariants;\n","import Slide from '../transitions/Slide';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport { InternalSnack } from '../types';\n\nexport const defaults = {\n    maxSnack: 3,\n    persist: false,\n    hideIconVariant: false,\n    disableWindowBlurListener: false,\n    variant: 'default',\n    autoHideDuration: 5000,\n    iconVariant: defaultIconVariants,\n    anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n    TransitionComponent: Slide,\n    transitionDuration: {\n        enter: 225,\n        exit: 195,\n    },\n};\n\n/**\n * Derives the right autoHideDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getAutoHideDuration = (optionsDuration: any, propsDuration: any) => {\n    const isNumberOrNull = (numberish: number | null) => typeof numberish === 'number' || numberish === null;\n\n    if (isNumberOrNull(optionsDuration)) return optionsDuration;\n    if (isNumberOrNull(propsDuration)) return propsDuration;\n    return defaults.autoHideDuration;\n};\n\n/**\n * Derives the right transitionDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getTransitionDuration = (optionsDuration: any, propsDuration: any) => {\n    const is = (item: any, types: string[]) => types.some((t) => typeof item === t);\n\n    if (is(optionsDuration, ['string', 'number'])) {\n        return optionsDuration;\n    }\n\n    if (is(optionsDuration, ['object'])) {\n        return {\n            ...defaults.transitionDuration,\n            ...(is(propsDuration, ['object']) && propsDuration),\n            ...optionsDuration,\n        };\n    }\n\n    if (is(propsDuration, ['string', 'number'])) {\n        return propsDuration;\n    }\n\n    if (is(propsDuration, ['object'])) {\n        return {\n            ...defaults.transitionDuration,\n            ...propsDuration,\n        };\n    }\n\n    return defaults.transitionDuration;\n};\n\nexport const merge = (options, props) => (name: keyof InternalSnack, shouldObjectMerge = false): any => {\n    if (shouldObjectMerge) {\n        return {\n            ...defaults[name],\n            ...props[name],\n            ...options[name],\n        };\n    }\n\n    if (name === 'autoHideDuration') {\n        return getAutoHideDuration(options.autoHideDuration, props.autoHideDuration);\n    }\n\n    if (name === 'transitionDuration') {\n        return getTransitionDuration(options.transitionDuration, props.transitionDuration);\n    }\n\n    return options[name] || props[name] || defaults[name];\n};\n","/**\n * https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n */\nexport default function getAutoHeightDuration(height: number): number {\n    if (!height) {\n        return 0;\n    }\n\n    const constant = height / 36;\n\n    return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n","import { css, CSSAttribute } from 'goober';\n\nexport function makeStyles<S extends { [key: string]: CSSAttribute }, K extends keyof S>(styles: S): { [key in K]: string } {\n    return Object.entries(styles).reduce((acc, [key, value]) => ({\n        ...acc,\n        [key]: css(value),\n    }), {} as { [key in K]: string });\n}\n\nexport const ComponentClasses = {\n    SnackbarContainer: 'notistack-SnackbarContainer',\n    Snackbar: 'notistack-Snackbar',\n    CollapseWrapper: 'notistack-CollapseWrapper',\n    MuiContent: 'notistack-MuiContent',\n};\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport TransitionComponent, { TransitionStatus } from '../Transition';\nimport useForkRef from '../useForkRef';\nimport { TransitionHandlerProps, TransitionProps } from '../../types';\nimport getAutoHeightDuration from '../getAutoHeightDuration';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        height: 0,\n    },\n    entered: {\n        height: 'auto',\n    },\n});\n\nconst collapsedSize = '0px';\n\nconst Collapse = React.forwardRef<unknown, TransitionProps>((props, ref) => {\n    const {\n        children,\n        style,\n        timeout = 300,\n        in: inProp,\n        onEnter,\n        onEntered,\n        onExit,\n        onExited,\n        direction, // Take this out since this is a Slide-only prop\n        ...other\n    } = props;\n\n    const timer = React.useRef<ReturnType<typeof setTimeout>>();\n    const wrapperRef = React.useRef(null);\n    const autoTransitionDuration = React.useRef<number>();\n\n    React.useEffect(() => () => {\n        if (timer.current) {\n            clearTimeout(timer.current);\n        }\n    }, []);\n\n    const nodeRef = React.useRef(null);\n    const handleRef = useForkRef(ref, nodeRef);\n\n    const getWrapperSize = () => (wrapperRef.current ? wrapperRef.current.clientHeight : 0);\n\n    const handleEnter: TransitionHandlerProps['onEnter'] = (node, isAppearing, snackId) => {\n        node.style.height = collapsedSize;\n        if (onEnter) {\n            onEnter(node, isAppearing, snackId);\n        }\n    };\n\n    const handleEntering = (node: HTMLElement) => {\n        const wrapperSize = getWrapperSize();\n\n        const { duration: transitionDuration, easing } = getTransitionProps({\n            style, timeout, mode: 'enter',\n        });\n\n        if (timeout === 'auto') {\n            const duration2 = getAutoHeightDuration(wrapperSize);\n            node.style.transitionDuration = `${duration2}ms`;\n            autoTransitionDuration.current = duration2;\n        } else {\n            node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n        }\n\n        node.style.height = `${wrapperSize}px`;\n        node.style.transitionTimingFunction = easing || '';\n    };\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = (node, isAppearing, snackId) => {\n        node.style.height = 'auto';\n        if (onEntered) {\n            onEntered(node, isAppearing, snackId);\n        }\n    };\n\n    const handleExit: TransitionHandlerProps['onExit'] = (node, snackId) => {\n        node.style.height = `${getWrapperSize()}px`;\n        if (onExit) {\n            onExit(node, snackId);\n        }\n    };\n\n    const handleExiting = (node: HTMLElement) => {\n        const wrapperSize = getWrapperSize();\n        const { duration: transitionDuration, easing } = getTransitionProps({\n            style, timeout, mode: 'exit',\n        });\n\n        if (timeout === 'auto') {\n            const duration2 = getAutoHeightDuration(wrapperSize);\n            node.style.transitionDuration = `${duration2}ms`;\n            autoTransitionDuration.current = duration2;\n        } else {\n            node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n        }\n\n        node.style.height = collapsedSize;\n        node.style.transitionTimingFunction = easing || '';\n    };\n\n    const handleAddEndListener = (next: any) => {\n        if (timeout === 'auto') {\n            timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n        }\n    };\n\n    return (\n        <TransitionComponent\n            in={inProp}\n            onEnter={handleEnter}\n            onEntered={handleEntered}\n            onEntering={handleEntering}\n            onExit={handleExit}\n            onExited={onExited}\n            onExiting={handleExiting}\n            addEndListener={handleAddEndListener}\n            nodeRef={nodeRef}\n            timeout={timeout === 'auto' ? null : timeout}\n            {...other}\n        >\n            {(state: TransitionStatus, childProps: Record<string, any>) => (\n                <div\n                    ref={handleRef}\n                    className={clsx(classes.root, { [classes.entered]: state === 'entered' })}\n                    style={{\n                        pointerEvents: 'all',\n                        overflow: 'hidden',\n                        minHeight: collapsedSize,\n                        transition: createTransition('height'),\n                        ...(state === 'entered' && {\n                            overflow: 'visible',\n                        }),\n                        ...(state === 'exited' && !inProp && {\n                            visibility: 'hidden',\n                        }),\n                        ...style,\n                    }}\n                    {...childProps}\n                >\n                    <div\n                        ref={wrapperRef}\n                        className={ComponentClasses.CollapseWrapper}\n                        // Hack to get children with a negative margin to not falsify the height computation.\n                        style={{ display: 'flex' }}\n                    >\n                        <div style={{ width: '100%' }}>\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </TransitionComponent>\n    );\n});\n\nexport default Collapse;\n","import { InternalSnack, SlideTransitionDirection, SnackbarOrigin, SnackbarClassKey, SnackbarProviderProps, ClassNameMap, ContainerClassKey } from '../types';\nimport { originKeyExtractor } from '../utils';\n\nconst direction: Record<string, SlideTransitionDirection> = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n};\n\nexport const getSlideDirection = (anchorOrigin: InternalSnack['anchorOrigin']): SlideTransitionDirection => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return direction[anchorOrigin.horizontal];\n    }\n    return direction[anchorOrigin.vertical];\n};\n\n/** Tranforms classes name */\nexport const toSnackbarAnchorOrigin = (anchorOrigin: SnackbarOrigin): SnackbarClassKey => (\n    `anchorOrigin${originKeyExtractor(anchorOrigin)}` as SnackbarClassKey\n);\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const keepSnackbarClassKeys = (classes: SnackbarProviderProps['classes'] = {}): Partial<ClassNameMap<SnackbarClassKey>> => {\n    const containerClasses: Record<ContainerClassKey, true> = {\n        containerRoot: true,\n        containerAnchorOriginTopCenter: true,\n        containerAnchorOriginBottomCenter: true,\n        containerAnchorOriginTopRight: true,\n        containerAnchorOriginBottomRight: true,\n        containerAnchorOriginTopLeft: true,\n        containerAnchorOriginBottomLeft: true,\n    };\n    return (Object.keys(classes) as ContainerClassKey[])\n        .filter((key) => !containerClasses[key])\n        .reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {});\n};\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => (0, ref.current)(...args), []);\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport { ownerDocument } from '../transitions/document-window';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../transitions/useForkRef';\n\nfunction mapEventPropToEvent(eventProp: string): string {\n    return eventProp.substring(2).toLowerCase() as any;\n}\n\nfunction clickedRootScrollbar(event: MouseEvent, doc: Document) {\n    return (\n        doc.documentElement.clientWidth < event.clientX\n        || doc.documentElement.clientHeight < event.clientY\n    );\n}\n\nconst mouseEvent = 'onClick';\nconst touchEvent = 'onTouchEnd';\n\ninterface ClickAwayProps {\n    /**\n     * The wrapped element.\n     */\n    children: React.ReactElement;\n    /**\n     * Callback fired when a \"click away\" event is detected.\n     */\n    onClickAway: (event: React.SyntheticEvent<any>) => void;\n}\n\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\nfunction ClickAway({ children, onClickAway }: ClickAwayProps): JSX.Element {\n    const movedRef = React.useRef(false);\n    const nodeRef = React.useRef<Element>(null);\n    const activatedRef = React.useRef(false);\n    const syntheticEventRef = React.useRef(false);\n\n    React.useEffect(() => {\n        // Ensure that this component is not \"activated\" synchronously.\n        // https://github.com/facebook/react/issues/20074\n        setTimeout(() => {\n            activatedRef.current = true;\n        }, 0);\n        return () => {\n            activatedRef.current = false;\n        };\n    }, []);\n\n    const handleRef = useForkRef(children.ref, nodeRef);\n\n    const handleClickAway = useEventCallback((event: any) => {\n        const insideReactTree = syntheticEventRef.current;\n        syntheticEventRef.current = false;\n\n        const doc = ownerDocument(nodeRef.current);\n\n        if (\n            !activatedRef.current\n            || !nodeRef.current\n            || ('clientX' in event && clickedRootScrollbar(event, doc))\n        ) {\n            return;\n        }\n\n        if (movedRef.current) {\n            movedRef.current = false;\n            return;\n        }\n\n        let insideDOM;\n\n        if (event.composedPath) {\n            insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n        } else {\n            insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n        }\n\n        if (!insideDOM && (!insideReactTree)) {\n            onClickAway(event);\n        }\n    });\n\n    const createHandleSynthetic = (handlerName: string) => (event: React.SyntheticEvent) => {\n        syntheticEventRef.current = true;\n\n        const childrenPropsHandler = children.props[handlerName];\n        if (childrenPropsHandler) {\n            childrenPropsHandler(event);\n        }\n    };\n\n    const childrenProps: { ref: React.Ref<Element> } & Pick<React.DOMAttributes<Element>, 'onClick' | 'onTouchEnd'> = { ref: handleRef };\n\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n\n    React.useEffect(() => {\n        const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n        const doc = ownerDocument(nodeRef.current);\n\n        const handleTouchMove = () => {\n            movedRef.current = true;\n        };\n\n        doc.addEventListener(mappedTouchEvent, handleClickAway);\n        doc.addEventListener('touchmove', handleTouchMove);\n\n        return () => {\n            doc.removeEventListener(mappedTouchEvent, handleClickAway);\n            doc.removeEventListener('touchmove', handleTouchMove);\n        };\n    }, [handleClickAway, touchEvent]);\n\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n\n    React.useEffect(() => {\n        const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n        const doc = ownerDocument(nodeRef.current);\n\n        doc.addEventListener(mappedMouseEvent, handleClickAway);\n\n        return () => {\n            doc.removeEventListener(mappedMouseEvent, handleClickAway);\n        };\n    }, [handleClickAway, mouseEvent]);\n\n    return <>{React.cloneElement(children, childrenProps)}</>;\n}\n\nexport default ClickAway;\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nimport { CloseReason, SharedProps } from '../types';\nimport { ComponentClasses } from '../utils/styles';\nimport ClickAway from '../ClickAway';\n\ninterface SnackbarProps extends Required<Pick<SharedProps, | 'disableWindowBlurListener' | 'onClose'>> {\n    open: boolean;\n    className: string;\n    children: JSX.Element;\n    autoHideDuration: number | null | undefined;\n    SnackbarProps: SharedProps['SnackbarProps'];\n}\n\ntype CloseHandler = (event: React.SyntheticEvent<any> | null, reason: CloseReason) => void;\n\nconst Snackbar = React.forwardRef<HTMLDivElement, SnackbarProps>((props, ref) => {\n    const {\n        children,\n        className,\n        autoHideDuration,\n        disableWindowBlurListener = false,\n        onClose,\n        open,\n        SnackbarProps = {},\n    } = props;\n\n    const timerAutoHide = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const handleClose: CloseHandler = useEventCallback((args: [React.SyntheticEvent<any>, CloseReason]) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam: number | null) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        if (timerAutoHide.current) {\n            clearTimeout(timerAutoHide.current);\n        }\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, 'timeout');\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            if (timerAutoHide.current) {\n                clearTimeout(timerAutoHide.current);\n            }\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        if (timerAutoHide.current) {\n            clearTimeout(timerAutoHide.current);\n        }\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter: React.MouseEventHandler<HTMLDivElement> = (event) => {\n        if (SnackbarProps.onMouseEnter) {\n            SnackbarProps.onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave: React.MouseEventHandler<HTMLDivElement> = (event) => {\n        if (SnackbarProps.onMouseLeave) {\n            SnackbarProps.onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    const handleClickAway = (event: React.SyntheticEvent<any>) => {\n        if (onClose) {\n            onClose(event, 'clickaway');\n        }\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <ClickAway onClickAway={handleClickAway}>\n            <div ref={ref} {...SnackbarProps} className={clsx(ComponentClasses.Snackbar, className)} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n                {children}\n            </div>\n        </ClickAway>\n    );\n});\n\nexport default Snackbar;\n","import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { SnackbarContentProps } from '../types';\nimport { breakpoints } from '../utils';\nimport { makeStyles } from '../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        [breakpoints.upSm]: {\n            flexGrow: 'initial',\n            minWidth: '288px',\n        },\n    },\n});\n\nconst SnackbarContent = forwardRef<HTMLDivElement, SnackbarContentProps>(({ className, ...props }, ref) => (\n    <div ref={ref} className={clsx(classes.root, className)} {...props} />\n));\n\nexport default SnackbarContent;\n","import React, { memo, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport SnackbarContent from '../../SnackbarContent';\nimport { CustomContentProps } from '../../types';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        backgroundColor: '#313131', // dark grey\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontWeight: 400,\n        fontSize: '0.875rem',\n        lineHeight: 1.43,\n        letterSpacing: '0.01071em',\n        color: '#fff',\n        alignItems: 'center',\n        padding: '6px 16px',\n        borderRadius: '4px',\n        boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n    },\n    lessPadding: {\n        paddingLeft: `${8 * 2.5}px`,\n    },\n    default: {\n        backgroundColor: '#313131', // dark grey\n    },\n    success: {\n        backgroundColor: '#43a047', // green\n    },\n    error: {\n        backgroundColor: '#d32f2f', // dark red\n    },\n    warning: {\n        backgroundColor: '#ff9800', // amber\n    },\n    info: {\n        backgroundColor: '#2196f3', // nice blue\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '8px 0',\n    },\n    action: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        paddingLeft: '16px',\n        marginRight: '-8px',\n    },\n});\n\nconst MaterialDesignContent = forwardRef<HTMLDivElement, CustomContentProps>((props, forwardedRef) => {\n    const {\n        id,\n        message,\n        action: componentOrFunctionAction,\n        iconVariant,\n        variant,\n        hideIconVariant,\n        style,\n    } = props;\n\n    const icon = iconVariant[variant];\n\n    let action = componentOrFunctionAction;\n    if (typeof action === 'function') {\n        action = action(id);\n    }\n\n    return (\n        <SnackbarContent\n            ref={forwardedRef}\n            role=\"alert\"\n            style={style}\n            className={clsx(\n                ComponentClasses.MuiContent,\n                classes.root,\n                { [classes.lessPadding]: !hideIconVariant && icon },\n                classes[variant],\n            )}\n        >\n            <div id=\"notistack-snackbar\" className={classes.message}>\n                {!hideIconVariant ? icon : null}\n                {message}\n            </div>\n            {action && (\n                <div className={classes.action}>{action}</div>\n            )}\n        </SnackbarContent>\n    );\n});\n\nexport default memo(MaterialDesignContent);\n","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport clsx from 'clsx';\nimport Collapse from '../transitions/Collapse';\nimport { getSlideDirection, toSnackbarAnchorOrigin, keepSnackbarClassKeys } from './utils';\nimport { TransitionHandlerProps, SnackbarProviderProps, CustomContentProps, InternalSnack, SharedProps } from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Snackbar from './Snackbar';\nimport { makeStyles } from '../utils/styles';\nimport MaterialDesignContent from '../ui/MaterialDesignContent';\n\nconst styles = makeStyles({\n    wrappedRoot: {\n        position: 'relative',\n        transform: 'translateX(0)',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        minWidth: '288px',\n    },\n});\n\ninterface SnackbarItemProps extends Required<Pick<SnackbarProviderProps, 'onEntered' | 'onExited' | 'onClose'>> {\n    snack: InternalSnack;\n    classes: SnackbarProviderProps['classes'];\n    onEnter: SnackbarProviderProps['onEnter'];\n    onExit: SnackbarProviderProps['onExit'];\n    Component?: React.ComponentType<CustomContentProps>;\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = (props) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    const handleClose: NonNullable<SharedProps['onClose']> = createChainedFunction([props.snack.onClose, props.onClose], props.snack.id);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, 'instructed');\n        }\n    };\n\n    const handleExitedScreen = useCallback((): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed((col) => !col);\n        }, 125);\n    }, []);\n\n    useEffect(() => (): void => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const {\n        snack,\n        classes: allClasses,\n        Component = MaterialDesignContent,\n    } = props;\n\n    const classes = useMemo(() => keepSnackbarClassKeys(allClasses), [allClasses]);\n\n    const {\n        open,\n        SnackbarProps,\n        TransitionComponent,\n        TransitionProps,\n        transitionDuration,\n        disableWindowBlurListener,\n        content: componentOrFunctionContent,\n        entered: ignoredEntered,\n        requestClose: ignoredRequestClose,\n        onEnter: ignoreOnEnter,\n        onEntered: ignoreOnEntered,\n        onExit: ignoreOnExit,\n        onExited: ignoreOnExited,\n        ...otherSnack\n    } = snack;\n\n    const transitionProps = {\n        direction: getSlideDirection(otherSnack.anchorOrigin),\n        timeout: transitionDuration,\n        ...TransitionProps,\n    };\n\n    let content = componentOrFunctionContent;\n    if (typeof content === 'function') {\n        content = content(otherSnack.id, otherSnack.message);\n    }\n\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } = (['onEnter', 'onEntered', 'onExit', 'onExited'] as (keyof TransitionHandlerProps)[]).reduce((acc, cbName) => ({\n        ...acc,\n        [cbName]: createChainedFunction([props.snack[cbName], props[cbName]]),\n    }), {});\n\n    return (\n        <Collapse id={otherSnack.id} unmountOnExit timeout={175} in={collapsed} onExited={callbacks.onExited}>\n            <Snackbar\n                open={open}\n                disableWindowBlurListener={disableWindowBlurListener}\n                autoHideDuration={otherSnack.autoHideDuration}\n                className={clsx(\n                    styles.wrappedRoot,\n                    classes.root,\n                    classes[toSnackbarAnchorOrigin(otherSnack.anchorOrigin)],\n                )}\n                SnackbarProps={SnackbarProps}\n                onClose={handleClose}\n            >\n                <TransitionComponent\n                    {...transitionProps}\n                    id={otherSnack.id}\n                    in={open}\n                    onExit={callbacks.onExit}\n                    onExited={handleExitedScreen}\n                    onEnter={callbacks.onEnter}\n                    // order matters. first callbacks.onEntered to set entered: true,\n                    // then handleEntered to check if there's a request for closing\n                    onEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n                >\n                    {content || <Component {...otherSnack} />}\n                </TransitionComponent>\n            </Snackbar>\n        </Collapse>\n    );\n};\n\nexport default SnackbarItem;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport createTransition from '../transitions/createTransition';\nimport { makeStyles, ComponentClasses } from '../utils/styles';\nimport { breakpoints, originKeyExtractor } from '../utils';\nimport { ContainerClassKey, SnackbarProviderProps } from '../types';\n\nconst indents = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nconst collapseWrapper = `.${ComponentClasses.CollapseWrapper}`;\n\nconst xsWidthMargin = 16;\n\nconst styles = makeStyles({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        position: 'fixed',\n        zIndex: 1400,\n        height: 'auto',\n        width: 'auto',\n        transition: createTransition(['top', 'right', 'bottom', 'left', 'max-width'], { duration: 300, easing: 'ease' }),\n        // container itself is invisible and should not block clicks, clicks should be passed to its children\n        // a pointerEvents: all is applied in the collapse component\n        pointerEvents: 'none',\n        [collapseWrapper]: {\n            padding: `${indents.snackbar.default}px 0px`,\n            transition: 'padding 300ms ease 0ms',\n        },\n        maxWidth: `calc(100% - ${indents.view.default * 2}px)`,\n        [breakpoints.downXs]: {\n            width: '100%',\n            maxWidth: `calc(100% - ${xsWidthMargin * 2}px)`,\n        },\n    },\n    rootDense: {\n        [collapseWrapper]: {\n            padding: `${indents.snackbar.dense}px 0px`,\n        },\n    },\n    top: {\n        top: `${indents.view.default - indents.snackbar.default}px`,\n        flexDirection: 'column',\n    },\n    bottom: {\n        bottom: `${indents.view.default - indents.snackbar.default}px`,\n        flexDirection: 'column-reverse',\n    },\n    left: {\n        left: `${indents.view.default}px`,\n        [breakpoints.upSm]: {\n            alignItems: 'flex-start',\n        },\n        [breakpoints.downXs]: {\n            left: `${xsWidthMargin}px`,\n        },\n    },\n    right: {\n        right: `${indents.view.default}px`,\n        [breakpoints.upSm]: {\n            alignItems: 'flex-end',\n        },\n        [breakpoints.downXs]: {\n            right: `${xsWidthMargin}px`,\n        },\n    },\n    center: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [breakpoints.upSm]: {\n            alignItems: 'center',\n        },\n    },\n});\n\ninterface SnackbarContainerProps {\n    children: React.ReactNode;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n    classes: SnackbarProviderProps['classes'];\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const {\n        classes = {},\n        anchorOrigin,\n        dense,\n        children,\n    } = props;\n\n    const combinedClassname = clsx(\n        ComponentClasses.SnackbarContainer,\n        styles[anchorOrigin.vertical],\n        styles[anchorOrigin.horizontal],\n        { [styles.rootDense]: dense },\n        styles.root, // root should come after others to override maxWidth\n        classes.containerRoot,\n        classes[`containerAnchorOrigin${originKeyExtractor(anchorOrigin)}` as ContainerClassKey],\n    );\n\n    return (\n        <div className={combinedClassname}>\n            {children}\n        </div>\n    );\n};\n\nexport default memo(SnackbarContainer);\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from '../SnackbarContext';\nimport { originKeyExtractor, isDefined } from '../utils';\nimport { defaults, merge } from './merger';\nimport SnackbarItem from '../SnackbarItem';\nimport SnackbarContainer from '../SnackbarContainer';\nimport warning from '../utils/warning';\nimport { SnackbarProviderProps, SnackbarKey, ProviderContext, TransitionHandlerProps, InternalSnack, OptionsObject, SharedProps } from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\n\nconst isOptions = (messageOrOptions: string | (OptionsObject & { message?: string })): messageOrOptions is OptionsObject & { message?: string } => (\n    typeof messageOrOptions !== 'string'\n);\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: InternalSnack[] };\n\ninterface State {\n    snacks: InternalSnack[];\n    queue: InternalSnack[];\n    contextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        this.state = {\n            snacks: [],\n            queue: [], // eslint-disable-line react/no-unused-state\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar,\n                closeSnackbar: this.closeSnackbar,\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || defaults.maxSnack;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (messageOrOptions: string | (OptionsObject & { message?: string }), optsOrUndefined: OptionsObject = {}): SnackbarKey => {\n        const opts = isOptions(messageOrOptions) ? messageOrOptions : optsOrUndefined;\n\n        let message: string | undefined = messageOrOptions as string;\n        if (isOptions(messageOrOptions)) {\n            message = messageOrOptions.message;\n        }\n\n        const {\n            key,\n            preventDuplicate,\n            ...options\n        } = opts;\n\n        const hasSpecifiedKey = isDefined(key);\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props);\n        const snack: InternalSnack = {\n            id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            persist: merger('persist'),\n            action: merger('action'),\n            content: merger('content'),\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            disableWindowBlurListener: merger('disableWindowBlurListener'),\n            autoHideDuration: merger('autoHideDuration'),\n            hideIconVariant: merger('hideIconVariant'),\n            TransitionComponent: merger('TransitionComponent'),\n            transitionDuration: merger('transitionDuration'),\n            TransitionProps: merger('TransitionProps', true),\n            iconVariant: merger('iconVariant', true),\n            style: merger('style', true),\n            SnackbarProps: merger('SnackbarProps', true),\n            className: clsx(this.props.className, options.className),\n        };\n\n        if (snack.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: InternalSnack): boolean => (\n                    hasSpecifiedKey ? item.id === id : item.message === message\n                );\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    }\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some((item) => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce((acc, current) => (\n            acc + (current.open && current.persist ? 1 : 0)\n        ), 0);\n\n        if (persistentCount === this.maxSnack) {\n            warning('NO_PERSIST_ALL');\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) {\n                    item.onClose(null, 'maxsnack', item.id);\n                }\n\n                if (this.props.onClose) {\n                    this.props.onClose(null, 'maxsnack', item.id);\n                }\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map((item) => (\n                item.id === key ? { ...item, entered: true } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: NonNullable<SharedProps['onClose']> = (event, reason, key) => {\n        // should not use createChainedFunction for onClose.\n        // because this.closeSnackbar called this function\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.id !== key) {\n                    return { ...item };\n                }\n\n                return item.entered\n                    ? { ...item, open: false }\n                    : { ...item, requestClose: true };\n            }),\n            queue: queue.filter((item) => item.id !== key), // eslint-disable-line react/no-unused-state\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find((item) => item.id === key);\n        if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, 'instructed', key);\n        }\n\n        this.handleCloseSnack(null, 'instructed', key);\n    }\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (node, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter((item) => item.id !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const {\n            domRoot,\n            children,\n            dense = false,\n            Components = {},\n            classes,\n        } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            const [nomineeSnack] = snacks;\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={nomineeSnack.anchorOrigin}\n                    classes={classes}\n                >\n                    {snacks.map((snack) => (\n                        <SnackbarItem\n                            key={snack.id}\n                            snack={snack}\n                            classes={classes}\n                            Component={Components[snack.variant]}\n                            onClose={this.handleCloseSnack}\n                            onEnter={this.props.onEnter}\n                            onExit={this.props.onExit}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from './types';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {(context) => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["React","createContext","capitalise","text","charAt","toUpperCase","slice","originKeyExtractor","anchor","vertical","horizontal","isDefined","value","Transition","props","initialStatus","appear","appearStatus","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","prevState","componentDidMount","updateStatus","this","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","enter","exit","mounting","performEnter","performExit","setState","id","isAppearing","timeouts","onEnter","node","safeSetState","_this2","onEntering","onTransitionEnd","onEntered","onExit","_this3","onExiting","onExited","cancel","nextState","callback","setNextCallback","active","event","_this4","handler","addEndListener","setTimeout","render","children","nodeRef","current","Error","Component","noop","setRef","ref","useForkRef","refA","refB","refValue","getTransitionProps","style","duration","transitionDuration","mode","easing","transitionTimingFunction","delay","transitionDelay","defaultProps","formatMs","milliseconds","Math","round","createTransition","options","Array","isArray","map","animatedProp","formattedDuration","formattedDelay","join","ownerDocument","document","ownerWindow","defaultView","window","setTranslateValue","direction","transform","rect","getBoundingClientRect","containerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","getTranslateValue","webkitTransform","Slide","inProp","other","handleRefIntermediary","handleRef","updatePosition","handleResize","func","wait","debounced","args","later","apply","_this","clearTimeout","clear","debounce","addEventListener","removeEventListener","TransitionComponent","snackId","scrollTop","reflow","transitionProps","webkitTransition","transition","childProps","visibility","undefined","SvgIcon","viewBox","focusable","fontSize","marginInlineEnd","userSelect","display","fill","flexShrink","CheckIcon","d","WarningIcon","ErrorIcon","InfoIcon","defaults","maxSnack","persist","hideIconVariant","disableWindowBlurListener","variant","autoHideDuration","iconVariant","success","warning","error","info","anchorOrigin","getAutoHeightDuration","constant","makeStyles","styles","Object","entries","reduce","acc","css","classes","root","entered","Collapse","timer","wrapperRef","autoTransitionDuration","getWrapperSize","clientHeight","wrapperSize","duration2","next","className","clsx","pointerEvents","overflow","minHeight","right","bottom","toSnackbarAnchorOrigin","createChainedFunction","funcs","extraArg","argums","indexOf","push","useEnhancedEffect","useEventCallback","fn","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAway","onClickAway","movedRef","activatedRef","syntheticEventRef","handleClickAway","insideReactTree","doc","documentElement","clientWidth","clientX","clientY","clickedRootScrollbar","composedPath","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","mappedMouseEvent","Snackbar","onClose","open","SnackbarProps","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","onMouseEnter","onMouseLeave","flexWrap","flexGrow","minWidth","SnackbarContent","forwardRef","backgroundColor","fontFamily","fontWeight","lineHeight","letterSpacing","color","alignItems","padding","borderRadius","boxShadow","lessPadding","paddingLeft","message","action","marginLeft","marginRight","memo","forwardedRef","icon","role","wrappedRoot","position","SnackbarItem","useRef","useState","collapsed","setCollapsed","snack","handleExitedScreen","useCallback","col","useEffect","allClasses","MaterialDesignContent","useMemo","containerClasses","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","keys","filter","key","obj","keepSnackbarClassKeys","TransitionProps","componentOrFunctionContent","content","ignoredEntered","otherSnack","callbacks","cbName","requestClose","boxSizing","maxHeight","zIndex","indents","maxWidth","rootDense","flexDirection","xsWidthMargin","center","dense","combinedClassname","isOptions","messageOrOptions","SnackbarProvider","optsOrUndefined","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","random","merger","name","shouldObjectMerge","propsDuration","isNumberOrNull","numberish","optionsDuration","is","item","types","some","t","getTransitionDuration","merge","compareFunction","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","handleDismissOldest","processQueue","popped","ignore","reason","shouldCloseAll","toBeClosed","find","handleCloseSnack","newState","contextValue","enqueueSnackbar","closeSnackbar","domRoot","Components","categ","category","snackbars","origin","SnackbarContainer","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","useContext","WrappedComponent","Consumer","context","hoistNonReactStatics"],"mappings":"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"}