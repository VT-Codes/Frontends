import { SessionJSON, UserJSON } from './json';
import { SessionResource } from './session';
import { UserResource } from './user';
export declare type ServerGetTokenOptions = {
    template?: string;
};
export declare type ServerGetToken = (options?: ServerGetTokenOptions) => Promise<string | null>;
export declare type ServerSideAuth = {
    sessionId: string | null;
    userId: string | null;
    getToken: ServerGetToken;
};
declare type SsrSessionState<SessionType> = {
    sessionId: null;
    session: null;
} | {
    sessionId: string;
    session: SessionType | undefined;
};
declare type SsrUserState<UserType> = {
    userId: null;
    user: null;
} | {
    userId: string;
    user: UserType | undefined;
};
export declare type SsrAuthData = SsrSessionState<SessionResource> & SsrUserState<UserResource>;
export declare type ClerkSsrState = SsrSessionState<SessionJSON> & SsrUserState<UserJSON>;
export declare type InitialState = {
    user: undefined;
    userId: undefined;
    session: undefined;
    sessionId: undefined;
} | (SsrSessionState<SessionJSON> & SsrUserState<UserJSON>);
export {};
//# sourceMappingURL=ssr.d.ts.map